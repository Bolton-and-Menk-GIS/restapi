Help on module open_restapi:

NAME
    open_restapi

FILE
    .\restapi\open_restapi.py

DESCRIPTION
    #-------------------------------------------------------------------------------
    # Name:        open_restapi
    # Purpose:     provides helper functions for Esri's ArcGIS REST API
    #              -Designed for external usage
    #
    # Author:      Caleb Mackey
    #
    # Created:     10/29/2014
    # Copyright:   (c) calebma 2014
    # Licence:     <your licence>
    # special thanks to geospatial python for shapefile module
    #-------------------------------------------------------------------------------

CLASSES
    __builtin__.object
        ArcServer
        Cursor
        Field
        Folder
        ImageService
        Layer
        MapService
        MapServiceLayer
        Row
        Service
        Table
    
    class ArcServer(__builtin__.object)
     |  Class to handle ArcGIS Server Connection
     |  
     |  Methods defined here:
     |  
     |  __init__(self, url, usr='', pw='')
     |      ArcGIS Server Object
     |      
     |      Required:
     |          url -- url to ArcGIS REST Services directory
     |      
     |      Optional:
     |          usr -- username credentials for ArcGIS Server
     |          pw -- password credentials for ArcGIS Server
     |  
     |  get_MapService(self, name_or_wildcard)
     |      method to return MapService Object, supports wildcards
     |      
     |      Required:
     |          name_or_wildcard -- service name or wildcard used to grab service name
     |              (ex: "moun_webmap_rest/mapserver" or "*moun*mapserver")
     |  
     |  get_folders(self)
     |      method to get folder objects
     |  
     |  get_service_url(self, wildcard='*', _list=False)
     |      method to return a service url
     |      
     |      Optional:
     |          wildcard -- wildcard used to grab service name (ex "moun*featureserver")
     |          _list -- default is false.  If true, will return a list of all services
     |              matching the wildcard.  If false, first match is returned.
     |  
     |  list_services(self, exclude_utilities=True)
     |      return list of services
     |      
     |      Optional:
     |          exclude_utilities -- default is True, set to False to
     |          view System and Utility services
     |  
     |  print_info(self)
     |      Method to print all properties of service
     |  
     |  walk(self, filterer=True)
     |      method to walk through ArcGIS REST Services
     |      
     |              Optional:
     |                  filterer -- will filter Utilities, default is True. If
     |                  false, will list all services.
     |      
     |              will return tuple of folders and services from the topdown.
     |              (root, folders, services) example:
     |      
     |              ags = restapi.ArcServer(url, username, password)
     |              for root, folders, services in ags.walk():
     |                  print root
     |                  print folders
     |                  print services
     |                  print '
     |      
     |      '
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  folders
     |      list of top directory services (unfolderized)
     |  
     |  services
     |      list of services
     |  
     |  top_services
     |      list of top directory services (unfolderized)
    
    class Cursor(__builtin__.object)
     |  class to handle query returns
     |  
     |  Methods defined here:
     |  
     |  __init__(self, url, fields='*', where='1=1', records=None, token='', add_params={}, get_all=False)
     |      Cusor object to handle queries to rest endpoints
     |      
     |      Required:
     |          url -- url to layer's rest endpoint
     |      
     |      Optional:
     |          fields -- option to limit fields returned.  All are returned by default
     |          where -- where clause for cursor
     |          records -- number of records to return (within bounds of max record count)
     |          token --
     |          add_params -- option to add additional search parameters
     |          get_all -- option to get all records in layer.  This option may be time consuming
     |              because the ArcGIS REST API uses default maxRecordCount of 1000, so queries
     |              must be performed in chunks to get all records
     |  
     |  get_rows(self)
     |      returns row objects
     |  
     |  rows(self)
     |      returns row values as tuple
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  count
     |      returns total number of records in Cursor
     |  
     |  features
     |      returns json features
     |  
     |  fields
     |      field names for cursor
     |  
     |  geometryType
     |      returns geometry type for features
     |  
     |  spatialReference
     |      returns the spatial Reference for features
    
    class Field(__builtin__.object)
     |  class for field to handle field info (name, alias, type, length)
     |  
     |  Methods defined here:
     |  
     |  __init__(self, f_dict)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Folder(__builtin__.object)
     |  class to handle ArcGIS REST Folder
     |  
     |  Methods defined here:
     |  
     |  __init__(self, folder_url, token='')
     |  
     |  list_services(self)
     |      method to list services
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  name
     |      returns the folder name
     |  
     |  services
     |      property to list Service objects (basic info)
    
    class ImageService(__builtin__.object)
     |  Class to handle map service and requests
     |  
     |  Methods defined here:
     |  
     |  __init__(self, url, usr='', pw='', token='')
     |      MapService Object
     |      
     |      Required:
     |          url -- image service url
     |      
     |      Optional (below params only required if security is enabled):
     |          usr -- username credentials for ArcGIS Server
     |          pw -- password credentials for ArcGIS Server
     |          token -- token to handle security (alternative to usr and pw)
     |  
     |  clip(self, poly, out_raster, envelope=False)
     |      method to clip a raster
     |  
     |  exportImage(self, poly, out_raster, sr='', envelope=False, rendering_rule={}, interp='RSP_BilinearInterpolation')
     |      method to export an AOI from an Image Service
     |      
     |      Required:
     |          poly -- polygon features
     |          out_raster -- output raster image
     |      
     |      Optional:
     |          sr -- spatial reference. Use WKID
     |          envelope -- option to use envelope of polygon
     |          rendering_rule -- rendering rule to perform raster functions
     |  
     |  print_info(self)
     |      Method to print all properties of service
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  spatialReference
    
    class Layer(__builtin__.object)
     |  class to handle layer info
     |  
     |  Methods defined here:
     |  
     |  __init__(self, lyr_dict)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class MapService(__builtin__.object)
     |  Class to handle map service and requests
     |  
     |  Methods defined here:
     |  
     |  __init__(self, url, usr='', pw='', token='')
     |      MapService Object
     |      
     |      Required:
     |          url -- map service url
     |      
     |      Optional (below params only required if security is enabled):
     |          usr -- username credentials for ArcGIS Server
     |          pw -- password credentials for ArcGIS Server
     |          token -- token to handle security (alternative to usr and pw)
     |  
     |  clip(self, layer_name, poly, output, fields='*', out_sr='', where='', envelope=False)
     |      Method for spatial Query, exports geometry that intersect polygon or
     |      envelope features.
     |      
     |      Required:
     |          layer_name -- name of map service layer to export to fc
     |          poly -- polygon (or other) features used for spatial query
     |          output -- full path to output feature class
     |      
     |      Optional:
     |           fields -- list of fields for fc. If none specified, all fields are returned.
     |              Supports fields in list [] or comma separated string "field1,field2,.."
     |          sr -- output spatial refrence (WKID)
     |          where -- optional where clause
     |          envelope -- if true, the polygon features bounding box will be used.  This option
     |              can be used if the feature has many vertices or to check against the full extent
     |              of the feature class
     |  
     |  cursor(self, layer_name, fields='*', where='1=1', records=None, add_params={}, get_all=False)
     |      Cusor object to handle queries to rest endpoints
     |      
     |      Required:
     |         layer_name -- name of layer in map service
     |      
     |      Optional:
     |          fields -- option to limit fields returned.  All are returned by default
     |          where -- where clause for cursor
     |          records -- number of records to return (within bounds of max record count)
     |          token --
     |          add_params -- option to add additional search parameters
     |          get_all -- option to get all records in layer.  This option may be time consuming
     |              because the ArcGIS REST API uses default maxRecordCount of 1000, so queries
     |              must be performed in chunks to get all records
     |  
     |  get_fields(self, layer_name)
     |      Method to return field objects from a layer
     |  
     |  layer(self, name)
     |      Method to return a layer object with advanced properties by name
     |      
     |      Required:
     |          name -- layer name (supports wildcard syntax*)
     |  
     |  layer_to_fc(self, layer_name, out_fc, sr=None, where='1=1', params={}, flds='*', records=None, get_all=False)
     |      Method to export a feature class from a service layer
     |      
     |      Required:
     |          layer_name -- name of map service layer to export to fc
     |          out_fc -- full path to output feature class
     |      
     |      Optional:
     |          sr -- output spatial refrence (WKID)
     |          where -- optional where clause
     |          params -- dictionary of parameters for query
     |          flds -- list of fields for fc. If none specified, all fields are returned.
     |              Supports fields in list [] or comma separated string "field1,field2,.."
     |          records -- number of records to return. Default is none, will return maxRecordCount
     |          get_all -- option to get all records.  If true, will recursively query REST endpoint
     |              until all records have been gathered. Default is False.
     |  
     |  layer_to_kmz(self, layer_name, flds='*', where='1=1', params={})
     |      Method to create kmz from query
     |      
     |      Required:
     |          layer_name -- name of map service layer to export to fc
     |      
     |      Optional:
     |          flds -- list of fields for fc. If none specified, all fields are returned.
     |              Supports fields in list [] or comma separated string "field1,field2,.."
     |          where -- optional where clause
     |          params -- dictionary of parameters for query
     |  
     |  list_fields(self, layer_name)
     |      Method to return field names from a layer
     |  
     |  list_layers(self)
     |      Method to return a list of layer names in a MapService
     |  
     |  list_tables(self)
     |      Method to return a list of layer names in a MapService
     |  
     |  print_info(self)
     |      Method to print all properties of service
     |  
     |  refresh(self)
     |      refreshes the MapService
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class MapServiceLayer(__builtin__.object)
     |  Class to handle advanced layer properties
     |  
     |  Methods defined here:
     |  
     |  __init__(self, url='', token='')
     |  
     |  clip(self, poly, output, flds='*', out_sr='', where='', envelope=False)
     |      Method for spatial Query, exports geometry that intersect polygon or
     |      envelope features.
     |      
     |      Required:
     |          poly -- polygon (or other) features used for spatial query
     |          output -- full path to output feature class
     |      
     |      Optional:
     |           fields -- list of fields for fc. If none specified, all fields are returned.
     |              Supports fields in list [] or comma separated string "field1,field2,.."
     |          sr -- output spatial refrence (WKID)
     |          where -- optional where clause
     |          envelope -- if true, the polygon features bounding box will be used.  This option
     |              can be used if the feature has many vertices or to check against the full extent
     |              of the feature class
     |  
     |  cursor(self, fields='*', where='1=1', records=None, add_params={}, get_all=False)
     |      Run Cursor on layer
     |  
     |  layer_to_fc(self, out_fc, sr=None, where='1=1', params={}, flds='*', records=None, get_all=False)
     |      Method to export a feature class from a service layer
     |      
     |      Required:
     |          out_fc -- full path to output feature class
     |      
     |      Optional:
     |          sr -- output spatial refrence (WKID)
     |          where -- optional where clause
     |          params -- dictionary of parameters for query
     |          flds -- list of fields for fc. If none specified, all fields are returned.
     |              Supports fields in list [] or comma separated string "field1,field2,.."
     |          records -- number of records to return. Default is none, will return maxRecordCount
     |          get_all -- option to get all records.  If true, will recursively query REST endpoint
     |              until all records have been gathered. Default is False.
     |  
     |  layer_to_kmz(self, flds='*', where='1=1', params={})
     |      Method to create kmz from query
     |      
     |      Required:
     |          layer_name -- name of map service layer to export to fc
     |      
     |      Optional:
     |          flds -- list of fields for fc. If none specified, all fields are returned.
     |              Supports fields in list [] or comma separated string "field1,field2,.."
     |          where -- optional where clause
     |          params -- dictionary of parameters for query
     |  
     |  list_fields(self)
     |      method to list field names
     |  
     |  print_info(self)
     |      Method to print all layer info
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  OID
     |  
     |  SHAPE
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  spatialReference
    
    class Row(__builtin__.object)
     |  Class to handle Row object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, features, fields, g_type)
     |      Row object for Cursor
     |      
     |      Required:
     |          features -- features JSON object
     |          fields -- fields participating in cursor
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  geometry
     |      returns REST API geometry as esri JSON
     |      
     |      Warning: output is unprojected
     |  
     |  oid
     |      returns the OID for row
     |  
     |  values
     |      returns values as tuple
    
    class Service(__builtin__.object)
     |  class to handle ArcGIS REST Service (basic info)
     |  
     |  Methods defined here:
     |  
     |  __init__(self, service_dict)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Table(__builtin__.object)
     |  class to handle table info
     |  
     |  Methods defined here:
     |  
     |  __init__(self, tab_dict)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FUNCTIONS
    add_token(p_dict={'f': 'json'}, token=None)
        Adds a token to parameters dictionary for web request
        
        Optional:
            p_dict -- parameter dictionary
            token -- token to add to p_dict. If no token is supplied, the original
                dictionary is returned
    
    fix_fields(service_lyr, fields, token='')
        fixes input fields, accepts esri field tokens too ("SHAPE@", "OID@")
        
        Required:
            service_lyr -- full path to url for feature layer
            fields -- list or comma delimited field list
            token -- token to handle security (only required if security is enabled)
    
    generate_token(url, user='', pw='')
        Generates a token to handle ArcGIS Server Security, this is
        different from generating a token from the admin side.  Meant
        for external use.
        
        Required:
            url -- url to services directory or individual map service
            user -- username credentials for ArcGIS Server
            pw -- password credentials for ArcGIS Server
    
    get_bbox(poly)
        gets a bounding box
    
    get_layerID_by_name(service, name, token='', grp_lyr=False)
        gets a mapservice layer ID by layer name from a service (returns an integer)
        
        Required:
            service -- full path to rest service
            name -- name of layer from which to grab ID
        
        Optional:
            token -- token to handle security (only required if security is enabled)
            grp_lyr -- default is false, does not return layer ID for group layers.  Set
                to true to search for group layers too.
    
    get_layer_url(service, name, token='', grp_lyr=False)
        returns the fully qualified path to a layer url
        
        Required:
            service -- full path to rest service
            name -- name of layer from which to grab ID
        
        Optional:
            token -- token to handle security (only required if security is enabled)
            grp_lyr -- default is false, does not return layer ID for group layers.  Set
                to true to search for group layers too.
    
    iter_services(service, token='', filterer=True)
        returns a generator for all services
        
        Required:
            service -- full path to a rest services directory
        
        Optional:
            token -- token to handle security (only required if security is enabled)
            filterer -- default is true to exclude "Utilities" and "System" folders,
                set to false to list all services.
    
    list_fields(service_lyr, token='')
        lists the field objects from a mapservice layer
        
        Returns a list of field objects with the following properties:
            name -- name of field
            alias -- alias name of field
            type -- type of field
            length -- length of field (if applicable, otherwise returns None)
        
        example:
        >>> mapservice = 'http://some_domain.com/ArcGIS/rest/services/folder/a_service/MapServer/23'
        >>> for field in get_field_info(mapservice):
               print field.name, field.alias, field.type, field.length
        
        Required:
            service_lyr -- full path to rest endpoint of a mapservice layer ID
        
        Optional:
            token -- token to handle security (only required if security is enabled)
    
    list_layers(service, token='')
        lists all layers in a mapservice
        
        Returns a list of field objects with the following properties:
            name -- name of layer
            id -- layer id (int)
            minScale -- minimum scale range at which layer draws
            maxScale -- maximum scale range at which layer draws
            defaultVisiblity -- the layer is visible (bool)
            parentLayerId -- layer id of parent layer if in group layer (int)
            subLayerIds -- list of id's of all child layers if group layer (list of int's)
        
        Required:
            service -- full path to mapservice
        
        Optional:
            token -- token to handle security (only required if security is enabled)
    
    list_services(service, token='', filterer=True)
        returns a list of all services
        
        Required:
            service -- full path to a rest services directory
        
        Optional:
            token -- token to handle security (only required if security is enabled)
            filterer -- default is true to exclude "Utilities" and "System" folders,
                set to false to list all services.
    
    list_tables(service, token='')
        List all tables in a MapService
        
        Required:
            service -- map service url
        
        Optional:
            token -- token to handle security (only required if security is enabled)
    
    mil_to_date(mil)
        date items from REST services are reported in milliseconds,
        this function will convert milliseconds to datetime objects
        
        Required:
            mil -- time in milliseconds
    
    poly_to_json(poly, wkid, envelope=False)
        Converts a features to JSON
        
        Required:
            poly -- input features (does not have to be polygons)
            wkid -- well known ID for spatial Reference
        
        Optional:
            envelope -- if True, will use bounding box of input features
    
    query(service_lyr, fields='*', where='1=1', add_params={}, ret_form='json', token='')
        runs more robust queries against a rest mapservice layer.  extra arguments can be
        passed in using the add_params dictionary.
        
        example: http://some_domain/ArcGIS/services/rest/some_folder/some_map_service/43    #43 is layer ID
        
        Required:
            service_lyr -- full path to rest endpoint of a mapservice layer ID
            field -- field or fields separated by comma to be returned from query
        
        Optional:
            where -- where clause to return records (ex: "TAX_NAME LIKE '%SMITH%'")
            add_params -- dictionary with any additional params you want to add
            ret_form -- default is json.  Return format for results
            token -- token to handle security (only required if security is enabled)
        
        list of parameters can be found here:
            http://resources.arcgis.com/en/help/rest/apiref/
    
    query_all(layer_url, oid, max_recs, where='1=1', add_params={}, token='')
        query all records
        
        Required:
            layer_url -- full path to layer url
            oid -- oid field name
            max_recs -- maximum amount of records returned
        
        Optional:
            where -- where clause for OID selection
            token -- token to handle security (only required if security is enabled)
    
    validate(obj, filterer=[])
        will dynamically create new a new class and set the properties
        if it's attribute is a dictionary
        
        Required:
            obj -- object to validate
        
        Optional:
            filterer -- list of object dictionary keys to skip
    
    walk(url, filterer=True, token='')
        method to walk through ArcGIS REST Services
        
            Required:
                url -- url to ArcGIS REST Services directory or folder
        
            Optional:
                filterer -- will filter Utilities, default is True. If
                  false, will list all services.
                token -- token to handle security (only required if security is enabled)
        
            will return tuple of folders and services from the topdown.
            (root, folders, services) example:
        
            ags = restapi.ArcServer(url, username, password)
            for root, folders, services in ags.walk():
                print root
                print folders
                print services
                print '
        
        '

DATA
    EXTRA = {'esriFieldTypeGeometry': 'SHAPE@', 'esriFieldTypeOID': 'OID@'...
    FTYPES = {'esriFieldTypeDate': 'D', 'esriFieldTypeDouble': 'F', 'esriF...
    G_DICT = {'esriGeometryEnvelope': 'Envelope', 'esriGeometryMultipoint'...
    OID = 'esriFieldTypeOID'
    SHAPE = 'esriFieldTypeGeometry'
    __author__ = 'Caleb Mackey'
    __author_email__ = 'calebma@bolton-menk.com'
    __copyright__ = 'Bolton & Menk, Inc.'
    __version__ = '1.0'

VERSION
    1.0

AUTHOR
    Caleb Mackey